#!/bin/bash

#Â Turns on second screen 
# Puts the first one on the right of the second one
resolve_display() {
	echo "Turning on the screen"
	xrandr --output HDMI-2 --auto

	if [ "$1" = "right" ] 
	then
		echo "Setting the screen on the right of the computer"
		xrandr --output HDMI-2 --right-of eDP-1			
	else
		echo "Setting the screen on the left of the computer"
		xrandr --output HDMI-2 --left-of eDP-1	
	fi	
	
	return
}

# Create a dir and cd into it
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Pretty print json in shell
prettyjson() {
    echo "$1" | python -m json.tool
}

# dsrm stop and rm a running docker container.
dsrm() {
    docker rm `docker stop $1`
}

# mount-google-drive mounts the google drive folder.
# if it cannot gets a response from google.com after a ping, 
# it would retry 30 seconds later
mount-google-drive () {
    path="${HOME}/google-drive"
    if ping -c 1 google.com >> /dev/null 2>&1; then
        mount | grep ${path} >/dev/null || /usr/bin/google-drive-ocamlfuse ${path} 
    else
        sleep 30s
        mount-google-drive
    fi
}

# vpn-is-running returns true if openvpn is running;
vpn-is-running() {
    # checks if the command pvpn exists
    if [ ! -x "$(command -v pvpn)" ]; then
        echo 0
    fi

    IFS=" "

    # gets the first line of pvpn --status and splits it
    # (i.e: [OpenVPN Status]: Running)
    read -ra words <<< "$(pvpn --status>&1 | head -n 1)"
    for word in "${words[@]}"; do
        if [ "$word" = "Running" ]; then
            echo 1
        fi;
    done

    echo 0
}
